package jp.kaleidot725.adbpad.domain.model.language.resources

object JapaneseResources : StringResources {
    override val windowTitle = "AdbPad"

    override val notFoundDevice = "デバイスがありません"
    override val notFoundCommand = "コマンドがありません"
    override val notFoundInputText = "テキストがありません"
    override val notFoundScreenshot = "スクリーンショットがありません"

    override val execute = "実行"
    override val save = "保存"
    override val delete = "削除"
    override val tab = "Tab"
    override val send = "送信"
    override val cancel = "キャンセル"
    override val targetDevice = "端末"
    override val tool = "ツール"
    override val setting = "設定　"
    override val dark = "Dark"
    override val light = "Light"
    override val system = "System"
    override val search: String = "Search"

    override val textCommandUnTitle: String = "untitle text command"
    override val screenshotTakeByCurrentTheme = "現在のテーマで撮影する"
    override val screenshotTakeByDarkTheme = "ダークテーマで撮影する"
    override val screenshotTakeByLightTheme = "ライトテーマで撮影する"
    override val screenshotTakeByBothTheme = "両方のテーマで撮影する"

    override val textCommandOptionNewLine: String = "送信する(改行キー)"
    override val textCommandOptionTab: String = "送信する(タブキー)"

    override val commandStartEventFormat = "「%s」のコマンド送信を開始しました"
    override val commandEndEventFormat = "「%s」のコマンド送信が完了しました"
    override val commandErrorEventFormat = "「%s」のコマンド送信に失敗しました"

    override val commandPointerLocationOnTitle = "ポインターの位置: オン"
    override val commandPointerLocationOnDetails = "画面オーバーレイを有効にして現在のタッチポイント座標を表示します"
    override val commandPointerLocationOffTitle = "ポインターの位置: オフ"
    override val commandPointerLocationOffDetails = "現在のタッチポイント座標を表示する画面オーバーレイを無効にする"
    override val commandLayoutBorderOnTitle = "レイアウト境界表示: ON"
    override val commandLayoutBorderOnDetails = "レイアウトの境界やマージンなどの表示を有効化します"
    override val commandLayoutBorderOffTitle = "レイアウト境界表示: OFF"
    override val commandLayoutBorderOffDetails = "レイアウトの境界やマージンなどの表示を無効化します"
    override val commandTapEffectOnTitle = "タップ表示: ON"
    override val commandTapEffectOnDetails = "タップ表示を有効化します"
    override val commandTapEffectOffTitle = "タップ表示: OFF"
    override val commandTapEffectOffDetails = "タップ表示を無効化します"
    override val commandSleepModeOnTitle = "スリープモード: ON"
    override val commandSleepModeOnDetails = "端末がスリープモードに移行可能にする"
    override val commandSleepModeOffTitle = "スリープモード: OFF"
    override val commandSleepModeOffDetails = "端末がスリープモードに移行不可能にする"
    override val commandDarkThemeOnTitle = "ダークテーマ: ON"
    override val commandDarkThemeOnDetails = "端末のテーマをダークテーマにする"
    override val commandDarkThemeOffTitle = "ダークテーマ: OFF"
    override val commandDarkThemeOffDetails = "端末のテーマをライトテーマにする"
    override val commandWifiOnTitle = "Wi-Fi: ON"
    override val commandWifiOnDetails = "Wi-Fi通信を有効化する"
    override val commandWifiOffTitle = "Wi-Fi: OFF"
    override val commandWifiOffDetails = "Wi-Fi通信を無効化する"
    override val commandDataOnTitle = "モバイル通信: ON"
    override val commandDataOnDetails = "モバイル通信を有効化する"
    override val commandDataOffTitle = "モバイル通信: OFF"
    override val commandDataOffDetails = "モバイル通信を無効化する"
    override val commandWifiAndDataOnTitle = "Wi-Fi&モバイル通信: ON"
    override val commandWifiAndDataOnDetails = "Wi-Fi通信とモバイル通信の両方を有効化する"
    override val commandWifiAndDataOffTitle = "Wi-Fi&モバイル通信: OFF"
    override val commandWifiAndDataOffDetails = "Wi-Fi通信とモバイル通信の両方を無効化する"
    override val commandScreenPinningOffTitle = "画面ピン留め: OFF"
    override val commandScreenPinningOffDetails = "ピン留め中のアプリのピン留めを解除する"
    override val commandEnableThreeButtonNavigationTitle: String = "3ボタン ナビゲーション: ON"
    override val commandEnableThreeButtonNavigationDetails: String = "3ボタン ナビゲーションを有効化する"
    override val commandEnableTwoButtonNavigationTitle: String = "2ボタン ナビゲーション: ON"
    override val commandEnableTwoButtonNavigationDetails: String = "2ボタン ナビゲーションを有効化する"
    override val commandEnableGestureNavigationTitle: String = "ジェスチャー ナビゲーション: ON"
    override val commandEnableGestureNavigationDetails: String = "ジェスチャー ナビゲーションを有効化する"

    override val textCommandStartEventFormat = "「%s」のテキスト送信を開始しました"
    override val textCommandEndEventFormat = "「%s」のテキスト送信が完了しました"
    override val textCommandErrorEventFormat = "「%s」のテキスト送信に失敗しました"

    override val keyCommandStartEventFormat = "「%s」のキー送信を開始しました"
    override val keyCommandEndEventFormat = "「%s」のキー送信が完了しました"
    override val keyCommandErrorEventFormat = "「%s」のキー送信に失敗しました"

    override val screenshotCommandStartEventFormat = "スクリーンショットの撮影を開始しました"
    override val screenshotCommandEndEventFormat = "スクリーンショットの撮影が完了しました"
    override val screenshotCommandErrorEventFormat = "スクリーンショットの撮影に失敗しました"
    override val screenshotCopyToClipbaordEventFormat: String = "スクリーンショットをクリップボードにコピーしました"
    override val cantScreenshotCopyToClipbaordEventFormat: String = "スクリーンショットをクリップボードにコピーできません"
    override val screenshotClearCache: String = "スクリーンショットを削除しました"

    override val menuCommandTitle = "コマンド"
    override val menuInputTextTitle = "テキスト送信"
    override val menuScreenshot = "スクリーンショット"

    override val settingLanguageHeader = "表示言語"
    override val settingLanguageEnglish = "英語"
    override val settingLanguageJapanese = "日本語"
    override val settingLanguageChinese = "簡体字中国語"
    override val settingLanguageTurkish = "トルコ語"

    override val settingThemeHeader = "テーマ"
    override val settingAccentColorHeader = "アクセントカラー"
    override val accentColorBlue = "ブルー"
    override val accentColorPurple = "パープル"
    override val accentColorGreen = "グリーン"
    override val accentColorOrange = "オレンジ"
    override val accentColorRed = "レッド"
    override val accentColorTeal = "ティール"
    override val accentColorIndigo = "インディゴ"
    override val settingAdbHeader = "ADB"
    override val settingAdbDirectoryPathTitle = "Binary Path"
    override val settingAdbPortNumberTitle = "Server Port"
    override val settingAndroidSdkHeader = "Android SDK"
    override val settingAndroidSdkDirectoryPathTitle = "Directory Path"
    override val settingAdbRestartTitle: String = "ADB再起動"

    override val settingScrcpyHeader = "Scrcpy"
    override val settingScrcpyBinaryPathTitle = "バイナリパス"

    override val adbErrorTitle = "ADBエラー"
    override val adbErrorMessage = "ADBサーバーを開始できませんでした、ADBの設定を変更してください"
    override val adbErrorOpenSetting = "設定を開く"

    override val sortByNameAsc: String = "名前(昇順)"
    override val sortByNameDesc: String = "名前(降順)"

    // TopSection tooltips
    override val tooltipRefresh: String = "更新"
    override val tooltipPower: String = "電源"
    override val tooltipVolumeUp: String = "音量アップ"
    override val tooltipVolumeDown: String = "音量ダウン"
    override val tooltipVolumeMute: String = "ミュート"
    override val tooltipBack: String = "戻る"
    override val tooltipHome: String = "ホーム"
    override val tooltipRecents: String = "最近のアプリ"

    // NavigationRail tooltips
    override val tooltipCommand: String = "コマンド"
    override val tooltipText: String = "テキスト"
    override val tooltipScreenshot: String = "スクリーンショット"
    override val tooltipFile: String = "ファイル"
    override val tooltipSetting: String = "設定"
    override val tooltipScrcpy: String = "Scrcpyを起動"
    override val tooltipNewDisplay: String = "仮想ディスプレイ"

    // MenuBar Window menu
    override val menuWindow: String = "ウィンドウ"
    override val menuWindowMaximize: String = "最大化"
    override val menuWindowMinimize: String = "最小化"
    override val menuWindowFullscreen: String = "フルスクリーン"
    override val menuWindowAlwaysOnTop: String = "常に最前面に表示"

    // Device Settings Screen
    override val deviceSettingsTitle: String = "デバイス設定"
    override val deviceNameSection: String = "デバイス名"
    override val customDeviceNameLabel: String = "カスタム名称"
    override val scrcpySettingsSection: String = "Scrcpy設定"

    // Scrcpy Options Section
    override val videoOptionsSection: String = "映像オプション"
    override val audioOptionsSection: String = "音声オプション"
    override val displayOptionsSection: String = "表示オプション"
    override val controlOptionsSection: String = "制御オプション"
    override val loggingOptionsSection: String = "ログオプション"

    override val noVideoLabel: String = "映像なし"
    override val noAudioLabel: String = "音声なし"
    override val fullscreenLabel: String = "フルスクリーン"
    override val alwaysOnTopLabel: String = "常に最前面"
    override val stayAwakeLabel: String = "スリープ無効"
    override val turnScreenOffLabel: String = "画面をオフ"
    override val powerOffOnCloseLabel: String = "終了時に電源オフ"
    override val showTouchesLabel: String = "タッチ表示"
    override val disableScreensaverLabel: String = "スクリーンセーバー無効"

    override val maxSizeLabel: String = "最大サイズ"
    override val videoBitRateLabel: String = "映像ビットレート"
    override val maxFpsLabel: String = "最大FPS"
    override val videoCodecLabel: String = "映像コーデック"
    override val videoSourceLabel: String = "映像ソース"
    override val audioBitRateLabel: String = "音声ビットレート"
    override val audioBufferLabel: String = "音声バッファ (ms)"
    override val audioCodecLabel: String = "音声コーデック"
    override val audioSourceLabel: String = "音声ソース"
    override val windowTitleLabel: String = "ウィンドウタイトル"
    override val displayIdLabel: String = "ディスプレイID"
    override val windowXLabel: String = "ウィンドウX"
    override val windowYLabel: String = "ウィンドウY"
    override val windowWidthLabel: String = "ウィンドウ幅"
    override val windowHeightLabel: String = "ウィンドウ高さ"
    override val logLevelLabel: String = "ログレベル"

    override val autoLabel: String = "自動"
    override val defaultLabel: String = "デフォルト"
    override val customTitlePlaceholder: String = "カスタムタイトル"

    // Setting Categories
    override val categoryAppearance: String = "外観"
    override val categorySDK: String = "SDK"

    // Device Setting Categories
    override val categoryDevice: String = "デバイス"
    override val categoryScrcpy: String = "Scrcpy"

    override val scrcpyNewDisplayProfiles: String = "プリセット一覧"
    override val scrcpyNewDisplayOverview: String =
        "選択した端末プリセットで仮想ディスプレイを作成して scrcpy を起動します。"
    override val scrcpyNewDisplayResolution: String = "解像度"
    override val scrcpyNewDisplayDensity: String = "画素密度"
    override val scrcpyNewDisplayDensityUnknown: String = "不明"
    override val scrcpyNewDisplayRefresh: String = "リフレッシュレート"
    override val scrcpyNewDisplayRefreshUnknown: String = "不明"
    override val scrcpyNewDisplayPanel: String = "ディスプレイ"
    override val scrcpyNewDisplayNoDevice: String = "ツールバーから端末を選択してください。"
    override val scrcpyNewDisplayLaunchSuccess: String = "仮想ディスプレイで scrcpy を起動しました。"
    override val scrcpyNewDisplayLaunchFailure: String =
        "scrcpy の起動に失敗しました。バイナリパスと端末の接続を確認してください。"
    override val scrcpyNewDisplayEmpty: String = "プリセットが見つかりません。"
    override val scrcpyNewDisplayTitleFormat: String = "%s の仮想ディスプレイ"
    override val scrcpyNewDisplayTargetDeviceFormat: String = "対象端末: %s"
}
