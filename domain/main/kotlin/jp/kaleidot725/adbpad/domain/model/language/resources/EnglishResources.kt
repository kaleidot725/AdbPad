package jp.kaleidot725.adbpad.domain.model.language.resources

object EnglishResources : StringResources {
    override val windowTitle = "AdbPad"

    override val notFoundDevice = "Not found device"
    override val notFoundCommand = "Not found command"
    override val notFoundInputText = "Not found input text"
    override val notFoundScreenshot = "Not found screenshot"

    override val execute = "Run"
    override val save = "Save"
    override val delete = "Delete"
    override val tab = "Tab"
    override val send = "Send"
    override val cancel = "Cancel"
    override val targetDevice = "Devices"
    override val tool = "Tools"
    override val setting = "Setting"
    override val dark = "Dark"
    override val light = "Light"
    override val system = "System"
    override val search: String = "Search"

    override val textCommandUnTitle: String = "untitle text command"

    override val screenshotTakeByCurrentTheme = "Take by current theme"
    override val screenshotTakeByDarkTheme = "Take by dark theme"
    override val screenshotTakeByLightTheme = "Take by light theme"
    override val screenshotTakeByBothTheme = "Take by both theme"

    override val textCommandOptionNewLine: String = "Send with newline key"
    override val textCommandOptionTab: String = "Send with tab key"

    override val commandStartEventFormat = "Start sending command 「%s」"
    override val commandEndEventFormat = "End sending command 「%s」"
    override val commandErrorEventFormat = "Error sending command 「%s」"

    override val commandPointerLocationOnTitle = "Pointer position: On"
    override val commandPointerLocationOnDetails = "Enable screen overlay to display current touch point coordinates"
    override val commandPointerLocationOffTitle = "Pointer position: off"
    override val commandPointerLocationOffDetails = "Disable screen overlay showing current touch point coordinates"
    override val commandLayoutBorderOnTitle = "Show layout bounds: ON"
    override val commandLayoutBorderOnDetails = "Enable showing clip bounds, margins, etc."
    override val commandLayoutBorderOffTitle = "Show layout bonds: OFF"
    override val commandLayoutBorderOffDetails = "Disable showing clip bounds, margins, etc."
    override val commandTapEffectOnTitle = "Show taps: ON"
    override val commandTapEffectOnDetails = "Enable showing visual feedback for taps."
    override val commandTapEffectOffTitle = "Show taps: OFF"
    override val commandTapEffectOffDetails = "Disable showing visual feedback for taps."
    override val commandSleepModeOnTitle = "Sleep mode: ON"
    override val commandSleepModeOnDetails = "Enable sleep mode and device go into sleep."
    override val commandSleepModeOffTitle = "Sleep mode: OFF"
    override val commandSleepModeOffDetails = "Disable sleep mode and device doesn't go into sleep."
    override val commandDarkThemeOnTitle = "Dark theme: ON"
    override val commandDarkThemeOnDetails = "Enable dark theme."
    override val commandDarkThemeOffTitle = "Dark theme: OFF"
    override val commandDarkThemeOffDetails = "Disable dark theme."
    override val commandWifiOnTitle = "Wi-Fi: ON"
    override val commandWifiOnDetails = "Enable Wi-Fi communication."
    override val commandWifiOffTitle = "Wi-Fi: OFF"
    override val commandWifiOffDetails = "Disable Wi-Fi communication."
    override val commandDataOnTitle = "Cellular: ON"
    override val commandDataOnDetails = "Enable cellular communication."
    override val commandDataOffTitle = "Cellular: OFF"
    override val commandDataOffDetails = "Disable cellular communication."
    override val commandWifiAndDataOnTitle = "Wi-Fi and cellular: ON"
    override val commandWifiAndDataOnDetails = "Enable Wi-Fi and cellular communication."
    override val commandWifiAndDataOffTitle = "Wi-Fi and cellular: OFF"
    override val commandWifiAndDataOffDetails = "Disable Wi-Fi and cellular communication."
    override val commandScreenPinningOffTitle = "Screen pinning: OFF"
    override val commandScreenPinningOffDetails = "Disable screen pinning."
    override val commandEnableThreeButtonNavigationTitle: String = "3 buttons navigation : ON"
    override val commandEnableThreeButtonNavigationDetails: String = "Enable 3 buttons navigation"
    override val commandEnableTwoButtonNavigationTitle: String = "2 buttons navigation : ON"
    override val commandEnableTwoButtonNavigationDetails: String = "Enable 2 buttons navigation"
    override val commandEnableGestureNavigationTitle: String = "Gesture navigation: ON"
    override val commandEnableGestureNavigationDetails: String = "Enable gesture navigation"

    override val textCommandStartEventFormat = "Start sending text「%s」"
    override val textCommandEndEventFormat = "End sending text「%s」"
    override val textCommandErrorEventFormat = "Error sending text「%s」"

    override val keyCommandStartEventFormat = "Start sending key「%s」"
    override val keyCommandEndEventFormat = "End sending key「%s」"
    override val keyCommandErrorEventFormat = "Error sending key「%s」"

    override val screenshotCommandStartEventFormat = "Start taking screenshot"
    override val screenshotCommandEndEventFormat = "End taking screenshot"
    override val screenshotCommandErrorEventFormat = "Error taking screenshot"
    override val screenshotCopyToClipbaordEventFormat: String = "Copy screenshot to clipboard"
    override val cantScreenshotCopyToClipbaordEventFormat: String = "Can't copy screen to clipboard"
    override val screenshotClearCache: String = "Delete screenshot"

    override val menuCommandTitle = "Command"
    override val menuInputTextTitle = "Send Text"
    override val menuScreenshot = "Screenshot"

    override val settingLanguageHeader = "Language"
    override val settingLanguageEnglish = "English"
    override val settingLanguageJapanese = "Japanese"
    override val settingLanguageChinese = "Chinese"
    override val settingLanguageTurkish = "Turkish"

    override val settingThemeHeader = "Theme"
    override val settingAccentColorHeader = "Accent Color"
    override val accentColorBlue = "Blue"
    override val accentColorPurple = "Purple"
    override val accentColorGreen = "Green"
    override val accentColorOrange = "Orange"
    override val accentColorRed = "Red"
    override val accentColorTeal = "Teal"
    override val accentColorIndigo = "Indigo"
    override val settingAdbHeader = "ADB"
    override val settingAdbDirectoryPathTitle = "Binary Path"
    override val settingAdbPortNumberTitle = "Server Port"
    override val settingAndroidSdkHeader = "Android SDK"
    override val settingAndroidSdkDirectoryPathTitle = "Directory Path"
    override val settingAdbRestartTitle: String = "Restart ADB"

    override val settingScrcpyHeader = "Scrcpy"
    override val settingScrcpyBinaryPathTitle = "Binary Path"

    override val adbErrorTitle = "Adb Error"
    override val adbErrorMessage = "Can't start adb server, Please change adb setting."
    override val adbErrorOpenSetting = "Open Setting"

    override val sortByNameAsc: String = "Name(Asc)"
    override val sortByNameDesc: String = "Name(Desc)"

    // TopSection tooltips
    override val tooltipRefresh: String = "Refresh"
    override val tooltipPower: String = "Power"
    override val tooltipVolumeUp: String = "Volume Up"
    override val tooltipVolumeDown: String = "Volume Down"
    override val tooltipVolumeMute: String = "Volume Mute"
    override val tooltipBack: String = "Back"
    override val tooltipHome: String = "Home"
    override val tooltipRecents: String = "Recents"

    // NavigationRail tooltips
    override val tooltipCommand: String = "Command"
    override val tooltipText: String = "Text"
    override val tooltipScreenshot: String = "Screenshot"
    override val tooltipFile: String = "File"
    override val tooltipSetting: String = "Setting"
    override val tooltipScrcpy: String = "Launch Scrcpy"
    override val tooltipNewDisplay: String = "Virtual display"

    // MenuBar Window menu
    override val menuWindow: String = "Window"
    override val menuWindowMaximize: String = "Maximize"
    override val menuWindowMinimize: String = "Minimize"
    override val menuWindowFullscreen: String = "Fullscreen"
    override val menuWindowAlwaysOnTop: String = "Always on Top"

    // Device Settings Screen
    override val deviceSettingsTitle: String = "Device Settings"
    override val deviceNameSection: String = "Device Name"
    override val customDeviceNameLabel: String = "Custom Name"
    override val scrcpySettingsSection: String = "Scrcpy Settings"

    // Scrcpy Options Section
    override val videoOptionsSection: String = "Video Options"
    override val audioOptionsSection: String = "Audio Options"
    override val displayOptionsSection: String = "Display Options"
    override val controlOptionsSection: String = "Control Options"
    override val loggingOptionsSection: String = "Logging Options"

    override val noVideoLabel: String = "No Video"
    override val noAudioLabel: String = "No Audio"
    override val fullscreenLabel: String = "Fullscreen"
    override val alwaysOnTopLabel: String = "Always on Top"
    override val stayAwakeLabel: String = "Stay Awake"
    override val turnScreenOffLabel: String = "Turn Screen Off"
    override val powerOffOnCloseLabel: String = "Power Off on Close"
    override val showTouchesLabel: String = "Show Touches"
    override val disableScreensaverLabel: String = "Disable Screensaver"

    override val maxSizeLabel: String = "Max Size"
    override val videoBitRateLabel: String = "Video Bit Rate"
    override val maxFpsLabel: String = "Max FPS"
    override val videoCodecLabel: String = "Video Codec"
    override val videoSourceLabel: String = "Video Source"
    override val audioBitRateLabel: String = "Audio Bit Rate"
    override val audioBufferLabel: String = "Audio Buffer (ms)"
    override val audioCodecLabel: String = "Audio Codec"
    override val audioSourceLabel: String = "Audio Source"
    override val windowTitleLabel: String = "Window Title"
    override val displayIdLabel: String = "Display ID"
    override val windowXLabel: String = "Window X"
    override val windowYLabel: String = "Window Y"
    override val windowWidthLabel: String = "Window Width"
    override val windowHeightLabel: String = "Window Height"
    override val logLevelLabel: String = "Log Level"

    override val autoLabel: String = "Auto"
    override val defaultLabel: String = "Default"
    override val customTitlePlaceholder: String = "Custom title"

    // Setting Categories
    override val categoryAppearance: String = "Appearance"
    override val categorySDK: String = "SDK"

    // Device Setting Categories
    override val categoryDevice: String = "Device"
    override val categoryScrcpy: String = "Scrcpy"

    override val scrcpyNewDisplayProfiles: String = "Preset profiles"
    override val scrcpyNewDisplayOverview: String =
        "Launch scrcpy with a virtual display that matches the selected device profile."
    override val scrcpyNewDisplayResolution: String = "Resolution"
    override val scrcpyNewDisplayDensity: String = "Pixel density"
    override val scrcpyNewDisplayDensityUnknown: String = "Unknown"
    override val scrcpyNewDisplayRefresh: String = "Refresh rate"
    override val scrcpyNewDisplayRefreshUnknown: String = "Unknown"
    override val scrcpyNewDisplayPanel: String = "Panel"
    override val scrcpyNewDisplayNoDevice: String = "Select a device from the toolbar to run the virtual display."
    override val scrcpyNewDisplayLaunchSuccess: String = "Started scrcpy with the virtual display."
    override val scrcpyNewDisplayLaunchFailure: String =
        "Failed to launch scrcpy. Check the scrcpy path and device connection."
    override val scrcpyNewDisplayEmpty: String = "No profiles available."
    override val scrcpyNewDisplayTitleFormat: String = "%s virtual display"
    override val scrcpyNewDisplayTargetDeviceFormat: String = "Target device: %s"
}
